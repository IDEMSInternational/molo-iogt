# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-06-25 14:26
from __future__ import unicode_literals

from django.db import migrations
from django.core.management.sql import emit_post_migrate_signal


def create_group(apps, schema_editor):
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)

    Group = apps.get_model('auth.Group')
    Permission = apps.get_model('auth.Permission')
    GroupPagePermission = apps.get_model('wagtailcore.GroupPagePermission')
    PollsIndexPage = apps.get_model('polls.PollsIndexPage')
    SurveysIndexPage = apps.get_model('surveys.SurveysIndexPage')
    SecurityQuestionIndexPage = apps.get_model('profiles.SecurityQuestionIndexPage')

    # Create M&E specialist Group
    me_expert, created = Group.objects.get_or_create(name='M&E Expert')

    # Get index pages
    poll = PollsIndexPage.objects.first()
    survey = SurveysIndexPage.objects.first()
    security_question = SecurityQuestionIndexPage.objects.first()

    # Add page permissions to polls, surveys and security question
    GroupPagePermission.objects.get_or_create(group=me_expert, page=poll, permission_type='add')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=poll, permission_type='edit')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=poll, permission_type='publish')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=poll, permission_type='bulk_delete')

    GroupPagePermission.objects.get_or_create(group=me_expert, page=survey, permission_type='add')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=survey, permission_type='edit')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=survey, permission_type='publish')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=survey, permission_type='bulk_delete')

    GroupPagePermission.objects.get_or_create(group=me_expert, page=security_question, permission_type='add')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=security_question, permission_type='edit')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=security_question, permission_type='publish')
    GroupPagePermission.objects.get_or_create(group=me_expert, page=security_question, permission_type='bulk_delete')

    # <-- Get Django permissions -->
    # Wagtail admin
    access_admin = Permission.objects.get(codename='access_admin')

    # Language
    add_sitelanguage = Permission.objects.get(codename='add_sitelanguage')
    add_sitelanguage_relation = Permission.objects.get(codename='add_sitelanguagerelation')

    # Comments
    add_comment = Permission.objects.get(codename='add_comment')
    change_comment = Permission.objects.get(codename='change_comment')
    delete_comment = Permission.objects.get(codename='delete_comment')
    can_moderate = Permission.objects.get(codename='can_moderate')
    add_molocomment = Permission.objects.get(codename='add_molocomment')
    edit_molocomment = Permission.objects.get(codename='change_molocomment')
    delete_molocomment = Permission.objects.get(codename='delete_molocomment')
    add_cannedresponse = Permission.objects.get(codename='add_cannedresponse')
    edit_cannedresponse = Permission.objects.get(codename='change_cannedresponse')
    delete_cannedresponse = Permission.objects.get(codename='delete_cannedresponse')

    # User Profile
    add_user = Permission.objects.get(codename='add_user')
    change_user = Permission.objects.get(codename='change_user')
    delete_user = Permission.objects.get(codename='delete_user')
    add_groups = Permission.objects.get(codename='add_group')
    edit_groups = Permission.objects.get(codename='change_group')
    delete_groups = Permission.objects.get(codename='delete_group')
    change_userprofile_settings = Permission.objects.get(codename='change_userprofilessettings')

    # A Django permissions
    me_expert.permissions.add(
        access_admin,
        add_sitelanguage, add_sitelanguage_relation,
        add_comment, change_comment, delete_comment, can_moderate,
        add_molocomment, edit_molocomment, delete_molocomment,
        add_cannedresponse, edit_cannedresponse, delete_cannedresponse,
        add_user, change_user, delete_user,
        add_groups, edit_groups, delete_groups,
        change_userprofile_settings
    )


class Migration(migrations.Migration):

    dependencies = [
        ('iogt', '0003_convert_recomended_articles'),
        ('core', '0077_molo_page'),
        ('profiles', '0021_remove_uuid_null'),
        ('polls', '0004_add-polls-permissions-to-groups'),
        ('surveys', '0026_remove_molosurveypageview_tag'),
        ('wagtailcore', '0032_add_bulk_delete_page_permission'),
        ('wagtailadmin', '0001_create_admin_access_permissions'),
        ('wagtailusers', '0005_make_related_name_wagtail_specific'),
        ('sites', '0002_alter_domain_unique'),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [migrations.RunPython(create_group)]
